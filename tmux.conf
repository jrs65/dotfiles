# Rebind the create and split window keys such that they open in the current directory
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Enable truecolor support
set -g default-terminal "screen-256color"
set -ga terminal-overrides ',xterm-256color:Tc'

# Enable nicer motion keys
set-window-option -g xterm-keys on
bind-key -n S-Left previous-window
bind-key -n S-Right next-window

# Setup a minimal status bar
set-option -g status-position bottom
set-option -g status-style fg=white,bg=default
set-window-option -g window-status-style fg="#666666",bg=default
set-window-option -g window-status-current-style fg="#FB4934",bg=default
set-option -g message-style fg=white,bg=default,bright
set -g status-left " "
set -g status-justify left
set -g status-right " "

setw -g window-status-format         ' #(echo "#W") '
setw -g window-status-current-format ' #(echo "#W") '

# Set up the status message
set -g automatic-rename-format "#{s/zsh//:pane_current_command}"
set -g window-status-format "#I #{=-15:?window_name,#{window_name},#{s/richard/home/:?pane_current_path,#{b:pane_current_path},}}#{?window_flags,#{window_flags}, } "
set -g window-status-current-format "#I #{=-15:?window_name,#{window_name},#{s/richard/home/:?pane_current_path,#{b:pane_current_path},}}#{?window_flags,#{window_flags}, } " 

# Make pane separators fainter
set -g pane-border-style fg="#3c3836"
set -g pane-active-border-style fg="#555555",bg="#282828"

# Reload the SSH agent socket when we reconnect to a tmux session
set -g update-environment "SSH_AUTH_SOCK"

# Bind a key to quickly update the tmux conf without exiting
bind-key r source-file ~/.tmux.conf \; display-message "Config reloaded..."


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# Modified to account for the fact all versions of tmux I use are new enough
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key -n 'C-\' if-shell "$is_vim" 'send-keys C-\\'  'select-pane -l'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
